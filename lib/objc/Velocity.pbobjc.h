// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: velocity.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class VLTPBError;
@class VLTPBModelPrediction;
@class VLTPBPrediction;
@class VLTPBSample;
@class VLTPBSensor;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum VLTPBPlatformType

typedef GPB_ENUM(VLTPBPlatformType) {
  VLTPBPlatformType_Ios = 0,
  VLTPBPlatformType_Android = 1,
};

GPBEnumDescriptor *VLTPBPlatformType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL VLTPBPlatformType_IsValidValue(int32_t value);

#pragma mark - Enum VLTPBSensor_Type

typedef GPB_ENUM(VLTPBSensor_Type) {
  VLTPBSensor_Type_Accel = 0,
  VLTPBSensor_Type_Gyro = 1,
  VLTPBSensor_Type_Mag = 2,
  VLTPBSensor_Type_Gps = 3,
};

GPBEnumDescriptor *VLTPBSensor_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL VLTPBSensor_Type_IsValidValue(int32_t value);

#pragma mark - VLTPBVelocityRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface VLTPBVelocityRoot : GPBRootObject
@end

#pragma mark - VLTPBSensor

typedef GPB_ENUM(VLTPBSensor_FieldNumber) {
  VLTPBSensor_FieldNumber_Type = 1,
  VLTPBSensor_FieldNumber_SamplesArray = 2,
};

@interface VLTPBSensor : GPBMessage

@property(nonatomic, readwrite) VLTPBSensor_Type type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VLTPBSample*> *samplesArray;
/** The number of items in @c samplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger samplesArray_Count;

@end

#pragma mark - VLTPBSample

typedef GPB_ENUM(VLTPBSample_FieldNumber) {
  VLTPBSample_FieldNumber_Timestamp = 1,
  VLTPBSample_FieldNumber_ValuesArray = 2,
};

@interface VLTPBSample : GPBMessage

@property(nonatomic, readwrite) double timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *valuesArray;
/** The number of items in @c valuesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger valuesArray_Count;

@end

#pragma mark - VLTPBCapture

typedef GPB_ENUM(VLTPBCapture_FieldNumber) {
  VLTPBCapture_FieldNumber_ImpressionId = 1,
  VLTPBCapture_FieldNumber_Ifa = 2,
  VLTPBCapture_FieldNumber_SequenceIndex = 3,
  VLTPBCapture_FieldNumber_AppId = 4,
  VLTPBCapture_FieldNumber_Metadata = 5,
  VLTPBCapture_FieldNumber_Platform = 6,
  VLTPBCapture_FieldNumber_SensorsArray = 7,
  VLTPBCapture_FieldNumber_Timestamp = 8,
};

@interface VLTPBCapture : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *impressionId;
/** Test to see if @c impressionId has been set. */
@property(nonatomic, readwrite) BOOL hasImpressionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ifa;
/** Test to see if @c ifa has been set. */
@property(nonatomic, readwrite) BOOL hasIfa;

@property(nonatomic, readwrite) uint32_t sequenceIndex;

@property(nonatomic, readwrite) BOOL hasSequenceIndex;
@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *metadata;
/** Test to see if @c metadata has been set. */
@property(nonatomic, readwrite) BOOL hasMetadata;

@property(nonatomic, readwrite) VLTPBPlatformType platform;

@property(nonatomic, readwrite) BOOL hasPlatform;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VLTPBSensor*> *sensorsArray;
/** The number of items in @c sensorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sensorsArray_Count;

@property(nonatomic, readwrite) double timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@end

#pragma mark - VLTPBDetectMotionRequest

typedef GPB_ENUM(VLTPBDetectMotionRequest_FieldNumber) {
  VLTPBDetectMotionRequest_FieldNumber_Id_p = 1,
  VLTPBDetectMotionRequest_FieldNumber_UserId = 2,
  VLTPBDetectMotionRequest_FieldNumber_SequenceIndex = 3,
  VLTPBDetectMotionRequest_FieldNumber_Platform = 4,
  VLTPBDetectMotionRequest_FieldNumber_Timestamp = 5,
  VLTPBDetectMotionRequest_FieldNumber_ModelNameArray = 6,
  VLTPBDetectMotionRequest_FieldNumber_SensorsArray = 7,
};

@interface VLTPBDetectMotionRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;
/** Test to see if @c userId has been set. */
@property(nonatomic, readwrite) BOOL hasUserId;

@property(nonatomic, readwrite) uint32_t sequenceIndex;

@property(nonatomic, readwrite) BOOL hasSequenceIndex;
@property(nonatomic, readwrite) VLTPBPlatformType platform;

@property(nonatomic, readwrite) BOOL hasPlatform;
@property(nonatomic, readwrite) double timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *modelNameArray;
/** The number of items in @c modelNameArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger modelNameArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VLTPBSensor*> *sensorsArray;
/** The number of items in @c sensorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sensorsArray_Count;

@end

#pragma mark - VLTPBHandshakeRequest

typedef GPB_ENUM(VLTPBHandshakeRequest_FieldNumber) {
  VLTPBHandshakeRequest_FieldNumber_AuthToken = 1,
  VLTPBHandshakeRequest_FieldNumber_Idfa = 2,
  VLTPBHandshakeRequest_FieldNumber_UserId = 3,
  VLTPBHandshakeRequest_FieldNumber_AppId = 4,
  VLTPBHandshakeRequest_FieldNumber_Platform = 5,
};

@interface VLTPBHandshakeRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *authToken;
/** Test to see if @c authToken has been set. */
@property(nonatomic, readwrite) BOOL hasAuthToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *idfa;
/** Test to see if @c idfa has been set. */
@property(nonatomic, readwrite) BOOL hasIdfa;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;
/** Test to see if @c userId has been set. */
@property(nonatomic, readwrite) BOOL hasUserId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite) VLTPBPlatformType platform;

@property(nonatomic, readwrite) BOOL hasPlatform;
@end

#pragma mark - VLTPBHandshakeResponse

typedef GPB_ENUM(VLTPBHandshakeResponse_FieldNumber) {
  VLTPBHandshakeResponse_FieldNumber_SampleSize = 1,
  VLTPBHandshakeResponse_FieldNumber_CaptureInterval = 2,
  VLTPBHandshakeResponse_FieldNumber_CanDetectMotion = 3,
  VLTPBHandshakeResponse_FieldNumber_CanLabelMotion = 4,
};

@interface VLTPBHandshakeResponse : GPBMessage

@property(nonatomic, readwrite) double sampleSize;

@property(nonatomic, readwrite) BOOL hasSampleSize;
@property(nonatomic, readwrite) double captureInterval;

@property(nonatomic, readwrite) BOOL hasCaptureInterval;
@property(nonatomic, readwrite) BOOL canDetectMotion;

@property(nonatomic, readwrite) BOOL hasCanDetectMotion;
@property(nonatomic, readwrite) BOOL canLabelMotion;

@property(nonatomic, readwrite) BOOL hasCanLabelMotion;
@end

#pragma mark - VLTPBRequest

typedef GPB_ENUM(VLTPBRequest_FieldNumber) {
  VLTPBRequest_FieldNumber_SensorsArray = 1,
  VLTPBRequest_FieldNumber_ModelNamesArray = 2,
  VLTPBRequest_FieldNumber_SessionId = 3,
};

@interface VLTPBRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VLTPBSensor*> *sensorsArray;
/** The number of items in @c sensorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sensorsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *modelNamesArray;
/** The number of items in @c modelNamesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger modelNamesArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@end

#pragma mark - VLTPBModelPrediction

typedef GPB_ENUM(VLTPBModelPrediction_FieldNumber) {
  VLTPBModelPrediction_FieldNumber_ModelName = 1,
  VLTPBModelPrediction_FieldNumber_PredictionsArray = 2,
};

@interface VLTPBModelPrediction : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *modelName;
/** Test to see if @c modelName has been set. */
@property(nonatomic, readwrite) BOOL hasModelName;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VLTPBPrediction*> *predictionsArray;
/** The number of items in @c predictionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger predictionsArray_Count;

@end

#pragma mark - VLTPBPrediction

typedef GPB_ENUM(VLTPBPrediction_FieldNumber) {
  VLTPBPrediction_FieldNumber_Name = 1,
  VLTPBPrediction_FieldNumber_Confidence = 2,
  VLTPBPrediction_FieldNumber_Timestamp = 3,
};

@interface VLTPBPrediction : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite) float confidence;

@property(nonatomic, readwrite) BOOL hasConfidence;
@property(nonatomic, readwrite) double timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@end

#pragma mark - VLTPBError

typedef GPB_ENUM(VLTPBError_FieldNumber) {
  VLTPBError_FieldNumber_ErrorMessage = 1,
  VLTPBError_FieldNumber_ErrorCode = 2,
};

@interface VLTPBError : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;
/** Test to see if @c errorMessage has been set. */
@property(nonatomic, readwrite) BOOL hasErrorMessage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorCode;
/** Test to see if @c errorCode has been set. */
@property(nonatomic, readwrite) BOOL hasErrorCode;

@end

#pragma mark - VLTPBResponse

typedef GPB_ENUM(VLTPBResponse_FieldNumber) {
  VLTPBResponse_FieldNumber_ModelPredictionsArray = 1,
  VLTPBResponse_FieldNumber_Error = 2,
};

@interface VLTPBResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VLTPBModelPrediction*> *modelPredictionsArray;
/** The number of items in @c modelPredictionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger modelPredictionsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) VLTPBError *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
