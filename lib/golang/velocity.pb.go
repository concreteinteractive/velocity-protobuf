// Code generated by protoc-gen-go.
// source: velocity.proto
// DO NOT EDIT!

/*
Package VelocityProto is a generated protocol buffer package.

It is generated from these files:
	velocity.proto

It has these top-level messages:
	Capture
	Sensor
	Sample
*/
package VelocityProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Capture_PlatformType int32

const (
	Capture_IOS     Capture_PlatformType = 0
	Capture_Android Capture_PlatformType = 1
)

var Capture_PlatformType_name = map[int32]string{
	0: "IOS",
	1: "Android",
}
var Capture_PlatformType_value = map[string]int32{
	"IOS":     0,
	"Android": 1,
}

func (x Capture_PlatformType) Enum() *Capture_PlatformType {
	p := new(Capture_PlatformType)
	*p = x
	return p
}
func (x Capture_PlatformType) String() string {
	return proto.EnumName(Capture_PlatformType_name, int32(x))
}
func (x *Capture_PlatformType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Capture_PlatformType_value, data, "Capture_PlatformType")
	if err != nil {
		return err
	}
	*x = Capture_PlatformType(value)
	return nil
}
func (Capture_PlatformType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Sensor_Type int32

const (
	Sensor_Accel Sensor_Type = 0
	Sensor_Gyro  Sensor_Type = 1
	Sensor_Mag   Sensor_Type = 2
	Sensor_GPS   Sensor_Type = 3
)

var Sensor_Type_name = map[int32]string{
	0: "Accel",
	1: "Gyro",
	2: "Mag",
	3: "GPS",
}
var Sensor_Type_value = map[string]int32{
	"Accel": 0,
	"Gyro":  1,
	"Mag":   2,
	"GPS":   3,
}

func (x Sensor_Type) Enum() *Sensor_Type {
	p := new(Sensor_Type)
	*p = x
	return p
}
func (x Sensor_Type) String() string {
	return proto.EnumName(Sensor_Type_name, int32(x))
}
func (x *Sensor_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Sensor_Type_value, data, "Sensor_Type")
	if err != nil {
		return err
	}
	*x = Sensor_Type(value)
	return nil
}
func (Sensor_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Capture struct {
	ImpressionId     *string               `protobuf:"bytes,1,opt,name=impressionId" json:"impressionId,omitempty"`
	Ifa              *string               `protobuf:"bytes,2,req,name=ifa" json:"ifa,omitempty"`
	SequenceIndex    *uint32               `protobuf:"varint,3,req,name=sequenceIndex" json:"sequenceIndex,omitempty"`
	AppId            *string               `protobuf:"bytes,4,opt,name=appId" json:"appId,omitempty"`
	Metadata         *string               `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	Platform         *Capture_PlatformType `protobuf:"varint,6,req,name=platform,enum=VelocityProto.Capture_PlatformType" json:"platform,omitempty"`
	Sensors          []*Sensor             `protobuf:"bytes,7,rep,name=sensors" json:"sensors,omitempty"`
	Timestamp        *float64              `protobuf:"fixed64,8,req,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Capture) Reset()                    { *m = Capture{} }
func (m *Capture) String() string            { return proto.CompactTextString(m) }
func (*Capture) ProtoMessage()               {}
func (*Capture) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Capture) GetImpressionId() string {
	if m != nil && m.ImpressionId != nil {
		return *m.ImpressionId
	}
	return ""
}

func (m *Capture) GetIfa() string {
	if m != nil && m.Ifa != nil {
		return *m.Ifa
	}
	return ""
}

func (m *Capture) GetSequenceIndex() uint32 {
	if m != nil && m.SequenceIndex != nil {
		return *m.SequenceIndex
	}
	return 0
}

func (m *Capture) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *Capture) GetMetadata() string {
	if m != nil && m.Metadata != nil {
		return *m.Metadata
	}
	return ""
}

func (m *Capture) GetPlatform() Capture_PlatformType {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return Capture_IOS
}

func (m *Capture) GetSensors() []*Sensor {
	if m != nil {
		return m.Sensors
	}
	return nil
}

func (m *Capture) GetTimestamp() float64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type Sensor struct {
	Type             *Sensor_Type `protobuf:"varint,1,req,name=type,enum=VelocityProto.Sensor_Type" json:"type,omitempty"`
	Samples          []*Sample    `protobuf:"bytes,2,rep,name=samples" json:"samples,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Sensor) Reset()                    { *m = Sensor{} }
func (m *Sensor) String() string            { return proto.CompactTextString(m) }
func (*Sensor) ProtoMessage()               {}
func (*Sensor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Sensor) GetType() Sensor_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Sensor_Accel
}

func (m *Sensor) GetSamples() []*Sample {
	if m != nil {
		return m.Samples
	}
	return nil
}

type Sample struct {
	Timestamp        *float64  `protobuf:"fixed64,1,req,name=timestamp" json:"timestamp,omitempty"`
	Values           []float32 `protobuf:"fixed32,2,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Sample) Reset()                    { *m = Sample{} }
func (m *Sample) String() string            { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()               {}
func (*Sample) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Sample) GetTimestamp() float64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *Sample) GetValues() []float32 {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*Capture)(nil), "VelocityProto.Capture")
	proto.RegisterType((*Sensor)(nil), "VelocityProto.Sensor")
	proto.RegisterType((*Sample)(nil), "VelocityProto.Sample")
	proto.RegisterEnum("VelocityProto.Capture_PlatformType", Capture_PlatformType_name, Capture_PlatformType_value)
	proto.RegisterEnum("VelocityProto.Sensor_Type", Sensor_Type_name, Sensor_Type_value)
}

func init() { proto.RegisterFile("velocity.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x8f, 0xcd, 0x6a, 0xe3, 0x30,
	0x10, 0xc7, 0x23, 0xd9, 0xf1, 0xc7, 0x24, 0x0e, 0x5e, 0xb1, 0x01, 0xb1, 0x27, 0xe3, 0x5d, 0x16,
	0x43, 0xa9, 0x0f, 0x81, 0x3e, 0x40, 0xe8, 0x21, 0xf8, 0x50, 0x1a, 0x48, 0xe9, 0x5d, 0xd8, 0x93,
	0x62, 0xb0, 0x2d, 0x55, 0x52, 0x42, 0xfd, 0x08, 0x7d, 0xe7, 0x1e, 0x8a, 0x5d, 0x53, 0x48, 0xc9,
	0x4d, 0xa3, 0xf9, 0x7f, 0xfc, 0x06, 0x56, 0x67, 0x6c, 0x64, 0x59, 0xdb, 0x3e, 0x57, 0x5a, 0x5a,
	0xc9, 0xa2, 0xe7, 0x69, 0xde, 0x0f, 0x63, 0xfa, 0x41, 0xc0, 0xbf, 0x17, 0xca, 0x9e, 0x34, 0xb2,
	0xdf, 0xb0, 0xac, 0x5b, 0xa5, 0xd1, 0x98, 0x5a, 0x76, 0x45, 0xc5, 0x49, 0x42, 0xb2, 0x90, 0x2d,
	0xc0, 0xa9, 0x8f, 0x82, 0xd3, 0x84, 0x66, 0x21, 0x5b, 0x43, 0x64, 0xf0, 0xf5, 0x84, 0x5d, 0x89,
	0x45, 0x57, 0xe1, 0x1b, 0x77, 0x12, 0x9a, 0x45, 0x2c, 0x82, 0xb9, 0x50, 0xaa, 0xa8, 0xb8, 0x3b,
	0x5a, 0x62, 0x08, 0x5a, 0xb4, 0xa2, 0x12, 0x56, 0xf0, 0xf9, 0xf8, 0x73, 0x07, 0x81, 0x6a, 0x84,
	0x3d, 0x4a, 0xdd, 0x72, 0x2f, 0xa1, 0xd9, 0x6a, 0xf3, 0x37, 0xbf, 0x00, 0xc9, 0x27, 0x88, 0x7c,
	0x3f, 0xc9, 0x9e, 0x7a, 0x85, 0xec, 0x3f, 0xf8, 0x06, 0x3b, 0x23, 0xb5, 0xe1, 0x7e, 0xe2, 0x64,
	0x8b, 0xcd, 0xfa, 0x87, 0xeb, 0x30, 0x6e, 0xd9, 0x2f, 0x08, 0x6d, 0xdd, 0xa2, 0xb1, 0xa2, 0x55,
	0x3c, 0x48, 0x68, 0x46, 0xd2, 0x7f, 0xb0, 0xbc, 0x88, 0xf2, 0xc1, 0x29, 0x1e, 0x0f, 0xf1, 0x8c,
	0x2d, 0xc0, 0xdf, 0x76, 0x95, 0x96, 0x75, 0x15, 0x93, 0xf4, 0x9d, 0x80, 0x37, 0x65, 0x64, 0xe0,
	0xda, 0x5e, 0x21, 0x27, 0x23, 0xde, 0x9f, 0xab, 0x45, 0xf9, 0x37, 0x95, 0x68, 0x55, 0x83, 0x86,
	0xd3, 0xeb, 0x54, 0xe3, 0x36, 0xbd, 0x05, 0x77, 0xd4, 0x87, 0x30, 0xdf, 0x96, 0x25, 0x36, 0xf1,
	0x8c, 0x05, 0xe0, 0xee, 0x7a, 0x2d, 0x63, 0x32, 0xf0, 0x3c, 0x88, 0x97, 0x98, 0x0e, 0x8f, 0xdd,
	0xfe, 0x10, 0x3b, 0xe9, 0x0d, 0x78, 0x5f, 0xc6, 0xcb, 0x73, 0x06, 0x1e, 0xc2, 0x56, 0xe0, 0x9d,
	0x45, 0x73, 0x9a, 0x2a, 0xe9, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x16, 0x3f, 0x8b, 0x8c, 0xd7,
	0x01, 0x00, 0x00,
}
